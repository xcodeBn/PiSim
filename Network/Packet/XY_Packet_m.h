//
// Generated file, do not edit! Created by opp_msgtool 6.0 from Network/Packet/XY_Packet.msg.
//

#ifndef __XY_PACKET_M_H
#define __XY_PACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class XY_Packet;
#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

// cplusplus {{
#include "inet/common/packet/chunk/FieldsChunk.h"
// }}

/**
 * Class generated from <tt>Network/Packet/XY_Packet.msg:24</tt> by opp_msgtool.
 * <pre>
 * class XY_Packet extends inet::FieldsChunk
 * {
 *     string data = "";
 * 
 * 
 * }
 * </pre>
 */
class XY_Packet : public ::inet::FieldsChunk
{
  protected:
    omnetpp::opp_string data = "";

  private:
    void copy(const XY_Packet& other);

  protected:
    bool operator==(const XY_Packet&) = delete;

  public:
    XY_Packet();
    XY_Packet(const XY_Packet& other);
    virtual ~XY_Packet();
    XY_Packet& operator=(const XY_Packet& other);
    virtual XY_Packet *dup() const override {return new XY_Packet(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual const char * getData() const;
    virtual void setData(const char * data);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const XY_Packet& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, XY_Packet& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline XY_Packet *fromAnyPtr(any_ptr ptr) { return check_and_cast<XY_Packet*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __XY_PACKET_M_H

